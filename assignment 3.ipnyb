import numpy as np
from scipy.stats import bernoulli

# calculate P(A|B) given P(A), P(B|A), P(B|not A)
def bayes_theorem(p_a, p_b_given_a, p_b_given_not_a):
	# calculate P(not A)
	not_a = 1 - p_a
	# calculate P(B)
	p_b = p_b_given_a * p_a + p_b_given_not_a * not_a
	# calculate P(A|B)
	p_a_given_b = (p_b_given_a * p_a) / p_b
	return p_a_given_b
 
# P(A) = probability that a person has a disease
p_a = 0.1/100 
print('P(A) = %.3f'%p_a)
# P(B) = probability that a person does not have the disease
p_b = 99.9/100
print('(P(B) = %.3f' %p_b)
# P(C|A) = probaility that the test result is positive is the person has disease
p_c_given_a = 99/100
print('(P(C/A) = %.3f' %p_c_given_a)
# P(C|not A) = prob that the test result is positive if the person does not have the disease
p_c_given_not_a = 0.005
print('(P(C/NOT A) = %.3f' %p_c_given_a)
# calculate P(A|B)
result = bayes_theorem(p_a, p_c_given_a, p_c_given_not_a)
# summarize
print('P(A|C) = %.3f%%' % (result * 100))
